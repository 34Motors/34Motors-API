// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FuelType {
  Hibrido
  Flex
  Eletrico
}

model User {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(127)
  email       String    @unique @db.VarChar(127)
  password    String    @db.VarChar(127)
  cpf         String    @unique @db.VarChar(11)
  birthDate   String
  description String?
  phone       String    @unique @db.VarChar(11)
  isSeller    Boolean   @default(false)
  adress      Adress?
  cars        Car[]
  comments    Comment[]

  @@map("users")
}

model Adress {
  id         Int    @id @default(autoincrement())
  cep        String @db.VarChar(8)
  state      String @db.VarChar(2)
  city       String @db.VarChar(50)
  street     String @db.VarChar(127)
  number     String @db.VarChar(8)
  complement String @db.VarChar(50)
  user       User   @relation(fields: [userId], references: [id])
  userId     Int    @unique

  @@map("adresses")
}

model Car {
  id          Int       @id @default(autoincrement())
  brand       String    @db.VarChar(20)
  model       String    @db.VarChar(50)
  year        String    @db.VarChar(4)
  fuelType    FuelType
  quilometers String    @db.VarChar(6)
  color       String    @db.VarChar(16)
  fipePrice   String
  price       Int
  description String
  frontImage  String    @db.VarChar(255)
  published   Boolean   @default(true)
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  comments    Comment[]
  images      Image[]

  @@map("cars")
}

model Comment {
  id          Int      @id @default(autoincrement())
  description String
  postDate    DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  car         Car      @relation(fields: [carId], references: [id])
  carId       Int

  @@map("comments")
}

model Image {
  id       Int    @id @default(autoincrement())
  imageUrl String @db.VarChar(255)
  car      Car    @relation(fields: [carId], references: [id])
  carId    Int

  @@map("images")
}
